{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;AACuD;AACK;AACG;AACH;;;AAE5D,MAAMI,MAAM,GAAW,CACrB;EAACC,IAAI,EAAC,EAAE;EAACC,UAAU,EAAC,SAAS;EAACC,SAAS,EAAC;AAAM,CAAC,EAC/C;EAACF,IAAI,EAAC,QAAQ;EAACG,SAAS,EAAEP,qEAAeA;AAAA,CAAC,EAC1C;EAAEI,IAAI,EAAE,SAAS;EAACG,SAAS,EAAEN,wEAAgBA;AAAA,CAAC,EAC9C;EAACG,IAAI,EAAE,QAAQ;EAAEG,SAAS,EAAEL,qEAAeA;AAAA,CAAC,CAC7C;AAMK,MAAOM,gBAAgB;EAAA,QAAAC,CAAA;qBAAhBD,gBAAgB;EAAA;EAAA,QAAAE,EAAA;UAAhBF;EAAgB;EAAA,QAAAG,EAAA;cAHjBZ,yDAAY,CAACa,OAAO,CAACT,MAAM,CAAC,EAC5BJ,yDAAY;EAAA;;;sHAEXS,gBAAgB;IAAAK,OAAA,GAAAC,yDAAA;IAAAC,OAAA,GAFjBhB,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;ACRlB,MAAOiB,YAAY;EALzBC,YAAA;IAME,KAAAC,KAAK,GAAG,gBAAgB;;EACzB,QAAAT,CAAA;qBAFYO,YAAY;EAAA;EAAA,QAAAN,EAAA;UAAZM,YAAY;IAAAG,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPzBE,uDAAA,oBAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACC2B;AACqB;AACpB;AACF;AACA;AACF;AACA;AACM;AACL;AACT;AACa;AACG;AACH;AAClB;;;AA4BpC,MAAOW,SAAS;EAAA,QAAA5B,CAAA;qBAAT4B,SAAS;EAAA;EAAA,QAAA3B,EAAA;UAAT2B,SAAS;IAAAC,SAAA,GAFRtB,wDAAY;EAAA;EAAA,QAAAL,EAAA;cAhBtBiB,oEAAa,EACbC,yFAAuB,EACvBC,qEAAe,EACfC,mEAAc,EACdC,oEAAc,EACdC,kEAAa,EACbC,kEAAa,EACbC,wEAAgB,EAChB3B,iEAAgB,EAChB4B,qDAAY,CAACxB,OAAO,CAAC;MACnB2B,OAAO,EAAE,KAAK;MACdC,aAAa,EAAE,oBAAoB;MACnCC,iBAAiB,EAAE;KACpB,CAAC;EAAA;;;sHAKOJ,SAAS;IAAAK,YAAA,GAxBlB1B,wDAAY,EACZhB,qEAAe,EACfC,wEAAgB,EAChBC,qEAAe;IAAAW,OAAA,GAGfe,oEAAa,EACbC,yFAAuB,EACvBC,qEAAe,EACfC,mEAAc,EACdC,oEAAc,EACdC,kEAAa,EACbC,kEAAa,EACbC,wEAAgB,EAChB3B,iEAAgB,EAAAM,qDAAA;EAAA;AAAA;;;;;;;;;;;;;;;;;;;AC/Bc;AACA;;;AAO5B,MAAO+B,UAAU;EAIrB5B,YACU6B,MAAoB;IAApB,KAAAA,MAAM,GAANA,MAAM;IAJhB,KAAAC,IAAI,GAAU,EAAE;IAChB,KAAAC,MAAM,GAAU,EAAE;EAIf;EAEHC,UAAUA,CAACC,IAAU;IACnB,OAAO,IAAIP,4CAAU,CAAEQ,QAAQ,IAAI;MACjCP,4CAAU,CAACM,IAAI,EAAE;QACfG,QAAQ,EAAGC,MAAM,IAAI;UACnB,IAAI,CAACP,IAAI,GAAGO,MAAM,CAACP,IAAI;UACvB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACO,YAAY,CAAC,IAAI,CAACR,IAAI,CAAC;UAC1CS,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACZ,IAAI,CAAC,CAAC;UAC1DS,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACX,MAAM,CAAC,CAAC;UAC9D,IAAI,IAAI,CAACA,MAAM,CAACY,MAAM,GAAG,CAAC,EAAE;YAC1BT,QAAQ,CAACU,KAAK,CAAC,yBAAyB,CAAC;YACzC,IAAI,CAACf,MAAM,CAACe,KAAK,CAAC,yEAAyE,EAAE,EAAE,CAAC;WACjG,MAAM;YACLV,QAAQ,CAACW,IAAI,EAAE;;UAEjBX,QAAQ,CAACE,QAAQ,EAAE;QACrB,CAAC;QACDU,MAAM,EAAE,IAAI;QACZC,cAAc,EAAE;OACjB,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAT,YAAYA,CAACR,IAAW;IACtB,MAAMC,MAAM,GAAU,EAAE;IACxBD,IAAI,CAACkB,OAAO,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAI;MAC7BC,MAAM,CAACC,IAAI,CAACH,GAAG,CAAC,CAACD,OAAO,CAAEK,GAAG,IAAI;QAC/B,IAAI,CAACJ,GAAG,CAACI,GAAG,CAAC,EAAE;UACbtB,MAAM,CAACuB,IAAI,CAAC;YAAEL,GAAG,EAAEC,QAAQ,GAAG,CAAC;YAAEK,MAAM,EAAEF,GAAG;YAAET,KAAK,EAAE;UAAa,CAAE,CAAC;SACtE,MAAM;UAAC;UACN,QAAQS,GAAG;YACT,KAAK,OAAO;cACV,IAAI,CAAC,4BAA4B,CAACG,IAAI,CAACP,GAAG,CAACI,GAAG,CAAC,CAAC,EAAE;gBAChDtB,MAAM,CAACuB,IAAI,CAAC;kBAAEL,GAAG,EAAEC,QAAQ,GAAG,CAAC;kBAAEK,MAAM,EAAEF,GAAG;kBAAET,KAAK,EAAE;gBAAe,CAAE,CAAC;;cAEzE;YACF,KAAK,OAAO;cACV,IAAI,CAAC,UAAU,CAACY,IAAI,CAACP,GAAG,CAACI,GAAG,CAAC,CAAC,EAAE;gBAC9BtB,MAAM,CAACuB,IAAI,CAAC;kBAAEL,GAAG,EAAEC,QAAQ,GAAG,CAAC;kBAAEK,MAAM,EAAEF,GAAG;kBAAET,KAAK,EAAE;gBAAsB,CAAE,CAAC;;cAEhF;YACF,KAAK,KAAK;cACR,IAAIa,KAAK,CAACR,GAAG,CAACI,GAAG,CAAC,CAAC,IAAIK,UAAU,CAACT,GAAG,CAACI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAIK,UAAU,CAACT,GAAG,CAACI,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;gBAC5EtB,MAAM,CAACuB,IAAI,CAAC;kBAAEL,GAAG,EAAEC,QAAQ,GAAG,CAAC;kBAAEK,MAAM,EAAEF,GAAG;kBAAET,KAAK,EAAE;gBAAa,CAAE,CAAC;;cAEvE;YACF;cACE;;;MAGR,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,OAAOb,MAAM;EACf;EAEA4B,OAAOA,CAAA;IACL,OAAO,IAAI,CAAC7B,IAAI;EAClB;EAEA8B,SAASA,CAAA;IACP,OAAO,IAAI,CAAC7B,MAAM;EACpB;EACA8B,WAAWA,CAAC5B,IAAU;IAAqB;IACzC,OAAO,IAAIP,4CAAU,CAAEQ,QAAQ,IAAI;MACjCP,4CAAU,CAACM,IAAI,EAAE;QACfG,QAAQ,EAAGC,MAAM,IAAI;UACnB,IAAI,CAACP,IAAI,GAAGO,MAAM,CAACP,IAAI;UACvB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACO,YAAY,CAAC,IAAI,CAACR,IAAI,CAAC;UAC1CS,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACZ,IAAI,CAAC,CAAC;UAC1DS,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACX,MAAM,CAAC,CAAC;UAC9DG,QAAQ,CAACW,IAAI,EAAE;UACfX,QAAQ,CAACE,QAAQ,EAAE;QACrB,CAAC;QACDU,MAAM,EAAE,IAAI;QACZC,cAAc,EAAE;OACjB,CAAC;IACJ,CAAC,CAAC;EACJ;EAEAe,UAAUA,CAACZ,QAAgB;IACzB,OAAO,CAAC,IAAI,CAACnB,MAAM,CAACgC,IAAI,CAACnB,KAAK,IAAIA,KAAK,CAACK,GAAG,KAAKC,QAAQ,GAAG,CAAC,CAAC;EAC/D;EAAC,QAAA1D,CAAA;qBAxFUoC,UAAU,EAAAnB,sDAAA,CAAAZ,qDAAA;EAAA;EAAA,QAAAJ,EAAA;WAAVmC,UAAU;IAAAsC,OAAA,EAAVtC,UAAU,CAAAuC,IAAA;IAAAC,UAAA,EAFT;EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IECZ3D,4DAAA,aAAsC;IAACA,oDAAA,aAAK;IAAAA,0DAAA,EAAK;;;;;IACjDA,4DAAA,aAAuC;IAACA,oDAAA,GAAiB;IAAAA,0DAAA,EAAK;;;;IAAtBA,uDAAA,GAAiB;IAAjBA,gEAAA,MAAAiE,WAAA,CAAAC,IAAA,MAAiB;;;;;IAGzDlE,4DAAA,aAAsC;IAACA,oDAAA,cAAM;IAAAA,0DAAA,EAAK;;;;;IAClDA,4DAAA,aAAuC;IAACA,oDAAA,GAAkB;IAAAA,0DAAA,EAAK;;;;IAAvBA,uDAAA,GAAkB;IAAlBA,gEAAA,MAAAmE,WAAA,CAAAC,KAAA,MAAkB;;;;;IAG1DpE,4DAAA,aAAsC;IAACA,oDAAA,qBAAa;IAAAA,0DAAA,EAAK;;;;;IACzDA,4DAAA,aAAuC;IAACA,oDAAA,GAAkB;IAAAA,0DAAA,EAAK;;;;IAAvBA,uDAAA,GAAkB;IAAlBA,gEAAA,MAAAqE,WAAA,CAAAC,KAAA,MAAkB;;;;;IAG1DtE,4DAAA,aAAsC;IAACA,oDAAA,aAAK;IAAAA,0DAAA,EAAK;;;;;IACjDA,4DAAA,aAAuC;IAACA,oDAAA,GAAiB;IAAAA,0DAAA,EAAK;;;;IAAtBA,uDAAA,GAAiB;IAAjBA,gEAAA,MAAAuE,WAAA,CAAAC,IAAA,MAAiB;;;;;IAGzDxE,4DAAA,aAAsC;IAACA,oDAAA,gBAAQ;IAAAA,0DAAA,EAAK;;;;;IACpDA,4DAAA,aAAuC;IAACA,oDAAA,GAAoB;IAAAA,0DAAA,EAAK;;;;IAAzBA,uDAAA,GAAoB;IAApBA,gEAAA,MAAAyE,WAAA,CAAAC,OAAA,MAAoB;;;;;IAG5D1E,4DAAA,aAAsC;IAACA,oDAAA,YAAI;IAAAA,0DAAA,EAAK;;;;;IAChDA,4DAAA,aAAuC;IAACA,oDAAA,GAAgB;IAAAA,0DAAA,EAAK;;;;IAArBA,uDAAA,GAAgB;IAAhBA,gEAAA,MAAA2E,WAAA,CAAAC,GAAA,MAAgB;;;;;IAG1D5E,uDAAA,aAAsG;;;;;IACtGA,uDAAA,aAA4G;;;;;IAI9GA,4DAAA,UAAiC;IAAAA,oDAAA,uBAAgB;IAAAA,0DAAA,EAAM;;;;;IAErDA,4DAAA,SAAiC;IAC/BA,oDAAA,GACF;IAAAA,0DAAA,EAAK;;;;IADHA,uDAAA,GACF;IADEA,gEAAA,UAAA8E,SAAA,CAAAtC,GAAA,eAAAsC,SAAA,CAAAhC,MAAA,QAAAgC,SAAA,CAAA3C,KAAA,MACF;;;;;IAHFnC,4DAAA,SAA8B;IAC5BA,wDAAA,IAAAgF,oCAAA,iBAEK;IACPhF,0DAAA,EAAK;;;;IAHmBA,uDAAA,GAAS;IAATA,wDAAA,YAAAkF,OAAA,CAAA5D,MAAA,CAAS;;;;;;AD/B/B,MAAO/C,gBAAgB;EAG3BgB,YAAoB4F,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAF1B,KAAA9D,IAAI,GAAU,EAAE;IAChB,KAAAC,MAAM,GAAU,EAAE;EACmB;EACrC8D,QAAQA,CAAA;IACN,MAAMC,UAAU,GAAGvD,YAAY,CAACwD,OAAO,CAAC,SAAS,CAAC;IAClD,MAAMC,YAAY,GAAGzD,YAAY,CAACwD,OAAO,CAAC,WAAW,CAAC;IAEtD,IAAID,UAAU,EAAE;MACd,IAAI,CAAChE,IAAI,GAAGW,IAAI,CAACN,KAAK,CAAC2D,UAAU,CAAC;;IAGpC,IAAIE,YAAY,EAAE;MAChB,IAAI,CAACjE,MAAM,GAAGU,IAAI,CAACN,KAAK,CAAC6D,YAAY,CAAC;;EAE1C;EACAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACnE,IAAI,EAAE;MACboE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACrE,IAAI,CAAC;MACvC,IAAI,CAAC8D,MAAM,CAACQ,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;;EAErC;EAAC,QAAA5G,CAAA;qBArBUR,gBAAgB,EAAAyB,+DAAA,CAAAZ,mDAAA;EAAA;EAAA,QAAAJ,EAAA;UAAhBT,gBAAgB;IAAAkB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAmG,MAAA;IAAAlG,QAAA,WAAAmG,0BAAAjG,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR7BE,4DAAA,eAAU;QAEAA,oDAAA,uBAAgB;QAAAA,0DAAA,EAAO;QAE/BA,4DAAA,aAA+B;QACzBA,oDAAA,YAAK;QAAAA,0DAAA,EAAK;QACdA,4DAAA,eAA8D;QAC5DA,qEAAA,MAAkC;QAChCA,wDAAA,IAAAiG,8BAAA,gBAAiD;QACjDjG,wDAAA,KAAAkG,+BAAA,gBAA8D;QAChElG,mEAAA,EAAe;QACfA,qEAAA,OAAmC;QACjCA,wDAAA,KAAAoG,+BAAA,gBAAkD;QAClDpG,wDAAA,KAAAqG,+BAAA,gBAA+D;QACjErG,mEAAA,EAAe;QACfA,qEAAA,OAAyC;QACvCA,wDAAA,KAAAsG,+BAAA,gBAAyD;QACzDtG,wDAAA,KAAAuG,+BAAA,gBAA+D;QACjEvG,mEAAA,EAAe;QACfA,qEAAA,OAAkC;QAChCA,wDAAA,KAAAwG,+BAAA,gBAAiD;QACjDxG,wDAAA,KAAAyG,+BAAA,gBAA8D;QAChEzG,mEAAA,EAAe;QACfA,qEAAA,OAAqC;QACnCA,wDAAA,KAAA0G,+BAAA,gBAAoD;QACpD1G,wDAAA,KAAA2G,+BAAA,gBAAiE;QACnE3G,mEAAA,EAAe;QACfA,qEAAA,QAAiC;QAC/BA,wDAAA,KAAA4G,+BAAA,gBAAgD;QAChD5G,wDAAA,KAAA6G,+BAAA,gBAA6D;QAC/D7G,mEAAA,EAAe;QAEfA,wDAAA,KAAA8G,+BAAA,iBAAsG;QACtG9G,wDAAA,KAAA+G,+BAAA,iBAA4G;QAC9G/G,0DAAA,EAAQ;QACRA,4DAAA,kBAA+D;QAArBA,wDAAA,mBAAAiH,mDAAA;UAAA,OAASlH,GAAA,CAAAyF,QAAA,EAAU;QAAA,EAAC;QAACxF,oDAAA,mBAAW;QAAAA,0DAAA,EAAS;QAAAA,uDAAA,UAAI;QACvFA,4DAAA,UAAI;QAAAA,oDAAA,eAAO;QAAAA,0DAAA,EAAK;QAChBA,wDAAA,KAAAkH,gCAAA,kBAAuD;QACvDlH,wDAAA,KAAAmH,+BAAA,iBAIK;QACPnH,0DAAA,EAAM;;;QArCaA,uDAAA,GAAmB;QAAnBA,wDAAA,eAAAD,GAAA,CAAAsB,IAAA,CAAmB;QA0BdrB,uDAAA,IAA2E;QAA3EA,wDAAA,oBAAAA,6DAAA,IAAAqH,GAAA,EAA2E;QAC9DrH,uDAAA,GAAoE;QAApEA,wDAAA,qBAAAA,6DAAA,IAAAqH,GAAA,EAAoE;QAIjGrH,uDAAA,GAAyB;QAAzBA,wDAAA,SAAAD,GAAA,CAAAuB,MAAA,CAAAY,MAAA,OAAyB;QAC1BlC,uDAAA,GAAuB;QAAvBA,wDAAA,SAAAD,GAAA,CAAAuB,MAAA,CAAAY,MAAA,KAAuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7B1B,MAAO1D,eAAe;EAK1Be,YAAoB+H,UAAsB,EAAUnC,MAAc;IAA9C,KAAAmC,UAAU,GAAVA,UAAU;IAAsB,KAAAnC,MAAM,GAANA,MAAM;IAJ1D,KAAAoC,WAAW,GAAW,CAAC;IACvB,KAAAC,aAAa,GAAW,CAAC;IACzB,KAAAC,WAAW,GAAU,CAAC;EAE+C;EAErErC,QAAQA,CAAA;IACN,MAAM/D,IAAI,GAAG,IAAI,CAACiG,UAAU,CAACpE,OAAO,EAAE;IACtC,MAAM5B,MAAM,GAAG,IAAI,CAACgG,UAAU,CAACnE,SAAS,EAAE;IAC1C,IAAI,CAACoE,WAAW,GAAGlG,IAAI,CAACqG,MAAM,CAAC,CAAC3I,CAAC,EAAE4I,KAAK,KAAK,IAAI,CAACL,UAAU,CAACjE,UAAU,CAACsE,KAAK,CAAC,CAAC,CAACzF,MAAM;IACtF,IAAI,CAACsF,aAAa,GAAGnG,IAAI,CAACa,MAAM,GAAG,IAAI,CAACqF,WAAW;IACnD,IAAI,CAACE,WAAW,GAAGnG,MAAM,CAACY,MAAM;EAClC;EAEA0F,eAAeA,CAAA;IACb,IAAI,CAACzC,MAAM,CAACQ,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;EACnC;EAAC,QAAA5G,CAAA;qBAjBUP,eAAe,EAAAwB,+DAAA,CAAAZ,oDAAA,GAAAY,+DAAA,CAAA6H,mDAAA;EAAA;EAAA,QAAA7I,EAAA;UAAfR,eAAe;IAAAiB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAmG,MAAA;IAAAlG,QAAA,WAAAkI,yBAAAhI,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT5BE,4DAAA,eAAU;QAEEA,oDAAA,oBAAa;QAAAA,0DAAA,EAAO;QAE5BA,4DAAA,aAA8B;QACHA,oDAAA,GAA+B;QAAAA,0DAAA,EAAI;QAC5DA,4DAAA,WAAuB;QAAAA,oDAAA,GAAmC;QAAAA,0DAAA,EAAI;QAC9DA,4DAAA,WAAuB;QAAAA,oDAAA,IAA+B;QAAAA,0DAAA,EAAI;QAC1DA,4DAAA,iBAAsE;QAA5BA,wDAAA,mBAAA+H,kDAAA;UAAA,OAAShI,GAAA,CAAA6H,eAAA,EAAiB;QAAA,EAAC;QAAC5H,oDAAA,2BAAmB;QAAAA,0DAAA,EAAS;;;QAHzEA,uDAAA,GAA+B;QAA/BA,gEAAA,mBAAAD,GAAA,CAAAwH,WAAA,KAA+B;QACjCvH,uDAAA,GAAmC;QAAnCA,gEAAA,qBAAAD,GAAA,CAAAyH,aAAA,KAAmC;QACnCxH,uDAAA,GAA+B;QAA/BA,gEAAA,mBAAAD,GAAA,CAAA0H,WAAA,KAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEGxDzH,4DAAA,gBAAoF;IAAtBA,wDAAA,mBAAAgI,2DAAA;MAAAhI,2DAAA,CAAAkI,GAAA;MAAA,MAAAC,MAAA,GAAAnI,2DAAA;MAAA,OAASA,yDAAA,CAAAmI,MAAA,CAAAG,SAAA,EAAW;IAAA,EAAC;IAACtI,oDAAA,cAAO;IAAAA,0DAAA,EAAS;;;;;IACpGA,4DAAA,aAAgD;IAAAA,oDAAA,GAAkB;IAAAA,0DAAA,EAAM;;;;IAAxBA,uDAAA,GAAkB;IAAlBA,+DAAA,CAAAwI,MAAA,CAAAC,YAAA,CAAkB;;;;;IAClEzI,4DAAA,cAA4C;IAAAA,oDAAA,GAAsC;IAAAA,0DAAA,EAAM;;;;IAA5CA,uDAAA,GAAsC;IAAtCA,gEAAA,oBAAA0I,MAAA,CAAAC,YAAA,CAAAC,IAAA,KAAsC;;;ADDhF,MAAOtK,eAAe;EAI1BiB,YACU+H,UAAsB,EACtBnC,MAAc,EACd/D,MAAoB;IAFpB,KAAAkG,UAAU,GAAVA,UAAU;IACV,KAAAnC,MAAM,GAANA,MAAM;IACN,KAAA/D,MAAM,GAANA,MAAM;IANhB,KAAAuH,YAAY,GAAgB,IAAI;IAChC,KAAAF,YAAY,GAAkB,IAAI;EAM/B;EAEHI,cAAcA,CAACC,KAAY;IACzB,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAA0B;IAC9C,IAAID,KAAK,CAACE,KAAK,IAAIF,KAAK,CAACE,KAAK,CAAC/G,MAAM,GAAG,CAAC,EAAE;MACzC,MAAMV,IAAI,GAAGuH,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;MAC3B,MAAMC,aAAa,GAAG1H,IAAI,CAACoH,IAAI,CAACO,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,EAAE,EAAEC,WAAW,EAAE;MAE/D,IAAIH,aAAa,KAAK,KAAK,EAAE;QAC3B,IAAI,CAAC9H,MAAM,CAACkI,OAAO,CAAC,gDAAgD,EAAE,EAAE,EACtE;UAAEzI,OAAO,EAAE;QAAI,CAAE,CAAC;QACpB;;MAGF,IAAI,CAAC8H,YAAY,GAAGnH,IAAI;MACxB,IAAI,CAACiH,YAAY,GAAG,IAAI,CAAC,CAAC;;EAE9B;;EAEAc,QAAQA,CAAA;IACN,IAAI,IAAI,CAACZ,YAAY,EAAE;MACrB,IAAI,CAACrB,UAAU,CAAC/F,UAAU,CAAC,IAAI,CAACoH,YAAY,CAAC,CAACa,SAAS,CAAC;QACtDpH,IAAI,EAAEA,CAAA,KAAK;UACT,IAAI,CAACqG,YAAY,GAAG,IAAI;UACxB,IAAI,CAACrH,MAAM,CAACqI,OAAO,CAAC,wBAAwB,EAAE,EAAE,EAAE;YAAE5I,OAAO,EAAE;UAAI,CAAE,CAAC;UACpE;UACA,IAAI,CAACsE,MAAM,CAACQ,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC;;QACDxD,KAAK,EAAGuH,GAAG,IAAI;UACb,IAAI,CAACjB,YAAY,GAAGiB,GAAG;QACzB;OACD,CAAC;KACH,MAAM;MACL,IAAI,CAACtI,MAAM,CAACe,KAAK,CAAC,wDAAwD,EAAE,EAAE,CAAC;;EAEnF;EACAmG,SAASA,CAAA;IAEP,IAAI,IAAI,CAACK,YAAY,EAAE;MACrB,IAAI,CAACrB,UAAU,CAAClE,WAAW,CAAC,IAAI,CAACuF,YAAY,CAAC,CAACa,SAAS,CAAC;QACvDpH,IAAI,EAAEA,CAAA,KAAK;UACT,IAAI,CAACqG,YAAY,GAAG,IAAI;UACxB;UACA,IAAI,CAACtD,MAAM,CAACQ,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC;;QACDxD,KAAK,EAAGuH,GAAG,IAAI;UACb,IAAI,CAACjB,YAAY,GAAGiB,GAAG;QACzB;OACD,CAAC;;EAER;EAAC,QAAA3K,CAAA;qBA1DYT,eAAe,EAAA0B,+DAAA,CAAAZ,oDAAA,GAAAY,+DAAA,CAAA6H,mDAAA,GAAA7H,+DAAA,CAAA2J,qDAAA;EAAA;EAAA,QAAA3K,EAAA;UAAfV,eAAe;IAAAmB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAmG,MAAA;IAAAlG,QAAA,WAAAgK,yBAAA9J,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX5BE,4DAAA,eAAU;QAEAA,oDAAA,sBAAe;QAAAA,0DAAA,EAAO;QAE9BA,4DAAA,aAA8B;QAE1BA,oDAAA,oBACA;QAAAA,4DAAA,eAAqE;QAAlCA,wDAAA,oBAAA6J,iDAAAC,MAAA;UAAA,OAAU/J,GAAA,CAAA8I,cAAA,CAAAiB,MAAA,CAAsB;QAAA,EAAC;QAApE9J,0DAAA,EAAqE;QAEvEA,4DAAA,gBAA+D;QAArBA,wDAAA,mBAAA+J,iDAAA;UAAA,OAAShK,GAAA,CAAAwJ,QAAA,EAAU;QAAA,EAAC;QAACvJ,oDAAA,aAAM;QAAAA,0DAAA,EAAS;QAAAA,uDAAA,UAAI;QAClFA,wDAAA,KAAAgK,kCAAA,oBAAoG;QACpGhK,wDAAA,KAAAiK,+BAAA,iBAAwE;QAAAjK,uDAAA,UAAI;QAC5EA,wDAAA,KAAAkK,+BAAA,iBAAwF;QAC1FlK,0DAAA,EAAM;;;QAHsCA,uDAAA,IAAkB;QAAlBA,wDAAA,SAAAD,GAAA,CAAA4I,YAAA,CAAkB;QACtD3I,uDAAA,GAAkB;QAAlBA,wDAAA,SAAAD,GAAA,CAAA0I,YAAA,CAAkB;QAClBzI,uDAAA,GAAkB;QAAlBA,wDAAA,SAAAD,GAAA,CAAA4I,YAAA,CAAkB;;;;;;;;;;;;;;;;;;;;ACViB;AAG7CwB,sEAAA,EAAwB,CAACE,eAAe,CAAC1J,sDAAS,CAAC,CAChD2J,KAAK,CAACZ,GAAG,IAAIjE,OAAO,CAACtD,KAAK,CAACuH,GAAG,CAAC,CAAC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/csv.service.ts","./src/app/preview/preview.component.ts","./src/app/preview/preview.component.html","./src/app/result/result.component.ts","./src/app/result/result.component.html","./src/app/upload/upload.component.ts","./src/app/upload/upload.component.html","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UploadComponent } from './upload/upload.component';\nimport { PreviewComponent } from './preview/preview.component';\nimport { ResultComponent } from './result/result.component';\n\nconst routes: Routes = [\n  {path:'',redirectTo:'/upload',pathMatch:'full'},\n  {path:'upload',component: UploadComponent},\n  { path: 'preview',component: PreviewComponent},\n  {path: 'result', component: ResultComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'csv-upload-app';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { PreviewComponent } from './preview/preview.component';\nimport { ResultComponent } from './result/result.component';\nimport { ToastrModule } from 'ngx-toastr';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UploadComponent,\n    PreviewComponent,\n    ResultComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatTableModule,\n    MatIconModule,\n    MatCardModule,\n    MatToolbarModule,\n    AppRoutingModule,\n    ToastrModule.forRoot({\n      timeOut: 10000,\n      positionClass: 'toast-bottom-right',\n      preventDuplicates: true,\n    })\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as Papa from 'papaparse';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CsvService {\n  data: any[] = [];\n  errors: any[] = [];\n\n  constructor(    \n    private toastr:ToastrService\n  ) {}\n\n  uploadFile(file: File): Observable<void> {\n    return new Observable((observer) => {\n      Papa.parse(file, {\n        complete: (result) => {\n          this.data = result.data;\n          this.errors = this.validateData(this.data);\n          localStorage.setItem('csvData', JSON.stringify(this.data));\n          localStorage.setItem('csvErrors', JSON.stringify(this.errors));\n          if (this.errors.length > 0) {\n            observer.error('Validation errors found');\n            this.toastr.error('Validation errors found. Please Preview a CSV file weather it correct.!', '');\n          } else {\n            observer.next();\n          }\n          observer.complete();\n        },\n        header: true,\n        skipEmptyLines: true\n      });\n    });\n  }\n\n  validateData(data: any[]): any[] {\n    const errors: any[] = [];\n    data.forEach((row, rowIndex) => {\n      Object.keys(row).forEach((col) => {\n        if (!row[col]) {\n          errors.push({ row: rowIndex + 1, column: col, error: 'Empty value' });\n        } else {debugger;\n          switch (col) {\n            case 'Email':\n              if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(row[col])) {\n                errors.push({ row: rowIndex + 1, column: col, error: 'Invalid email' });\n              }\n              break;\n            case 'Phone':\n              if (!/^\\d{10}$/.test(row[col])) {\n                errors.push({ row: rowIndex + 1, column: col, error: 'Invalid phone number' });\n              }\n              break;\n            case 'GPA':\n              if (isNaN(row[col]) || parseFloat(row[col]) < 0 || parseFloat(row[col]) > 10) {\n                errors.push({ row: rowIndex + 1, column: col, error: 'Invalid GPA' });\n              }\n              break;\n            default:\n              break;\n          }\n        }\n      });\n    });\n    return errors;\n  }\n\n  getData(): any[] {\n    return this.data;\n  }\n\n  getErrors(): any[] {\n    return this.errors;\n  }\n  previewFile(file: File): Observable<void> {debugger;\n    return new Observable((observer) => {\n      Papa.parse(file, {\n        complete: (result) => {\n          this.data = result.data;\n          this.errors = this.validateData(this.data);\n          localStorage.setItem('csvData', JSON.stringify(this.data));\n          localStorage.setItem('csvErrors', JSON.stringify(this.errors));\n          observer.next();\n          observer.complete();\n        },\n        header: true,\n        skipEmptyLines: true\n      });\n    });\n  }\n\n  isRowValid(rowIndex: number): boolean {\n    return !this.errors.some(error => error.row === rowIndex + 1);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.scss']\n})\nexport class PreviewComponent implements OnInit {\n  data: any[] = [];\n  errors: any[] = [];\n  constructor(private router: Router) {}\n  ngOnInit(): void {\n    const storedData = localStorage.getItem('csvData');\n    const storedErrors = localStorage.getItem('csvErrors');\n\n    if (storedData) {\n      this.data = JSON.parse(storedData);\n    }\n\n    if (storedErrors) {\n      this.errors = JSON.parse(storedErrors);\n    }\n  }\n  onResult(): void {\n    if (this.data) {\n      console.log('Preview file:', this.data);\n      this.router.navigate(['/result']);\n    }\n  }\n}\n","<mat-card>\n  <mat-toolbar color=\"primary\">\n    <span>CSV Data Preview</span>\n  </mat-toolbar>\n  <div class=\"preview-container\">\n    <h3>Data:</h3>\n    <table mat-table [dataSource]=\"data\" class=\"mat-elevation-z8\">\n      <ng-container matColumnDef=\"Name\">\n        <th mat-header-cell *matHeaderCellDef> Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.Name}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"Email\">\n        <th mat-header-cell *matHeaderCellDef> Email </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.Email}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"PhoneNumber\">\n        <th mat-header-cell *matHeaderCellDef> Phone Number </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.Phone}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"City\">\n        <th mat-header-cell *matHeaderCellDef> City </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.City}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"Address\">\n        <th mat-header-cell *matHeaderCellDef> Address </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.Address}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"GPA\">\n        <th mat-header-cell *matHeaderCellDef> GPA </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.GPA}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"['Name', 'Email', 'PhoneNumber', 'City', 'Address', 'GPA']\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: ['Name', 'Email', 'PhoneNumber', 'City', 'Address', 'GPA'];\"></tr>\n    </table>\n    <button mat-raised-button color=\"primary\" (click)=\"onResult()\">View Result</button><br><br><span></span>\n    <h3>Errors:</h3>\n    <div *ngIf=\"errors.length === 0\">No errors found.</div>\n    <ul *ngIf=\"errors.length > 0\">\n      <li *ngFor=\"let error of errors\">\n        Row {{error.row}}, Column {{error.column}}: {{error.error}}\n      </li>\n    </ul>\n  </div>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { CsvService } from '../csv.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.scss']\n})\nexport class ResultComponent implements OnInit {\n  correctRows: number = 0;\n  incorrectRows: number = 0;\n  totalerrors: number =0;\n\n  constructor(private csvService: CsvService, private router: Router) {}\n\n  ngOnInit(): void {\n    const data = this.csvService.getData();\n    const errors = this.csvService.getErrors();\n    this.correctRows = data.filter((_, index) => this.csvService.isRowValid(index)).length;\n    this.incorrectRows = data.length - this.correctRows;\n    this.totalerrors = errors.length;\n  }\n\n  onUploadAnother(): void {\n    this.router.navigate(['/upload']);\n  }\n}\n","<mat-card>\n    <mat-toolbar color=\"primary\">\n      <span>Upload Result</span>\n    </mat-toolbar>\n    <div class=\"result-container\">\n      <p style=\"color: green;\">Correct Rows: {{ correctRows }}</p>\n      <p style=\"color: red;\">Incorrect Rows: {{ incorrectRows }}</p>\n      <p style=\"color: red;\">Total Errors: {{ totalerrors }}</p>\n      <button mat-raised-button color=\"primary\" (click)=\"onUploadAnother()\">Upload Another File</button>\n    </div>\n  </mat-card>\n  ","import { Component } from '@angular/core';\nimport { CsvService } from '../csv.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.scss']\n})\nexport class UploadComponent {\n  selectedFile: File | null = null;\n  errorMessage: string | null = null;\n\n  constructor(\n    private csvService: CsvService,\n    private router: Router,\n    private toastr:ToastrService\n  ) {}\n\n  onFileSelected(event: Event): void {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length > 0) {\n      const file = input.files[0];\n      const fileExtension = file.name.split('.').pop()?.toLowerCase();\n\n      if (fileExtension !== 'csv') {\n        this.toastr.warning('Invalid file format. Please upload a CSV file.', '', \n          { timeOut: 5000 });\n        return;\n      }\n\n      this.selectedFile = file;\n      this.errorMessage = null; // Clear any previous error messages\n    }\n  }\n\n  onUpload(): void {\n    if (this.selectedFile) {\n      this.csvService.uploadFile(this.selectedFile).subscribe({\n        next: () => {\n          this.errorMessage = null;\n          this.toastr.success('Uploaded Successfully!', '', { timeOut: 5000 });\n          // Navigate to the next page or show a success message\n          this.router.navigate(['/preview']); // Adjust the route as needed\n        },\n        error: (err) => {\n          this.errorMessage = err;\n        }\n      });\n    } else {\n      this.toastr.error('No file selected. Please select a CSV file to upload.!', '');\n    }\n  }\n  onPreview(): void \n  {\n    if (this.selectedFile) {\n      this.csvService.previewFile(this.selectedFile).subscribe({\n        next: () => {\n          this.errorMessage = null;\n          // Navigate to the next page or show a success message\n          this.router.navigate(['/preview']); // Adjust the route as needed\n        },\n        error: (err) => {\n          this.errorMessage = err;\n        }\n      });\n  }\n}\n}","<mat-card>\n  <mat-toolbar color=\"primary\">\n    <span>Upload CSV File</span>\n  </mat-toolbar>\n  <div class=\"upload-container\">\n    <label for=\"file-input\" class=\"file-input-label\">\n      Choose File\n      <input id=\"file-input\" type=\"file\" (change)=\"onFileSelected($event)\">\n    </label>\n    <button mat-raised-button color=\"primary\" (click)=\"onUpload()\">Upload</button><br>\n    <button mat-raised-button color=\"accent\" *ngIf=\"selectedFile\" (click)=\"onPreview()\">Preview</button>\n    <div *ngIf=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div><br><br>\n    <div *ngIf=\"selectedFile\" class=\"file-name\">Selected File: {{ selectedFile.name }}</div>\n  </div>\n</mat-card>\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","UploadComponent","PreviewComponent","ResultComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","_","_2","_3","forRoot","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","BrowserModule","BrowserAnimationsModule","MatButtonModule","MatInputModule","MatTableModule","MatIconModule","MatCardModule","MatToolbarModule","ToastrModule","AppModule","bootstrap","timeOut","positionClass","preventDuplicates","declarations","Observable","Papa","CsvService","toastr","data","errors","uploadFile","file","observer","parse","complete","result","validateData","localStorage","setItem","JSON","stringify","length","error","next","header","skipEmptyLines","forEach","row","rowIndex","Object","keys","col","push","column","test","isNaN","parseFloat","getData","getErrors","previewFile","isRowValid","some","ɵɵinject","ToastrService","factory","ɵfac","providedIn","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","element_r16","Name","element_r17","Email","element_r18","Phone","element_r19","City","element_r20","Address","element_r21","GPA","ɵɵtextInterpolate3","error_r24","ɵɵtemplate","PreviewComponent_ul_36_li_1_Template","ɵɵproperty","ctx_r15","router","ngOnInit","storedData","getItem","storedErrors","onResult","console","log","navigate","ɵɵdirectiveInject","Router","consts","PreviewComponent_Template","ɵɵelementContainerStart","PreviewComponent_th_9_Template","PreviewComponent_td_10_Template","ɵɵelementContainerEnd","PreviewComponent_th_12_Template","PreviewComponent_td_13_Template","PreviewComponent_th_15_Template","PreviewComponent_td_16_Template","PreviewComponent_th_18_Template","PreviewComponent_td_19_Template","PreviewComponent_th_21_Template","PreviewComponent_td_22_Template","PreviewComponent_th_24_Template","PreviewComponent_td_25_Template","PreviewComponent_tr_26_Template","PreviewComponent_tr_27_Template","ɵɵlistener","PreviewComponent_Template_button_click_28_listener","PreviewComponent_div_35_Template","PreviewComponent_ul_36_Template","ɵɵpureFunction0","_c0","csvService","correctRows","incorrectRows","totalerrors","filter","index","onUploadAnother","i2","ResultComponent_Template","ResultComponent_Template_button_click_11_listener","UploadComponent_button_11_Template_button_click_0_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","onPreview","ɵɵtextInterpolate","ctx_r1","errorMessage","ctx_r2","selectedFile","name","onFileSelected","event","input","target","files","fileExtension","split","pop","toLowerCase","warning","onUpload","subscribe","success","err","i3","UploadComponent_Template","UploadComponent_Template_input_change_7_listener","$event","UploadComponent_Template_button_click_8_listener","UploadComponent_button_11_Template","UploadComponent_div_12_Template","UploadComponent_div_15_Template","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}